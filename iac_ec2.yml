AWSTemplateFormatVersion: '2010-09-09'
Description: Complete CI/CD Infrastructure with EC2, S3, CodeBuild, CodeDeploy, and CodePipeline

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  ######################
  # S3 Artifact Bucket #
  ######################
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "cicd-artifact-bucket-${AWS::AccountId}-${AWS::Region}"

  ######################
  # EC2 Security Group #
  ######################
  MyInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: vpc-03075f3394ce0982b  # Replace with your default VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ####################
  # EC2 Instance     #
  ####################
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      KeyName: cicd                 # Replace with your actual KeyPair name
      SecurityGroupIds:
        - !Ref MyInstanceSecurityGroup

  #########################
  # CodeDeploy Role       #
  #########################
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:*
                  - s3:*
                  - autoscaling:*
                  - iam:PassRole
                  - cloudwatch:*
                Resource: "*"

  #########################
  # CodePipeline Role     #
  #########################
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codedeploy:*
                  - codebuild:*
                  - iam:PassRole
                Resource: "*"

  #########################
  # CodeBuild Role        #
  #########################
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

Outputs:
  ArtifactBucketName:
    Description: "S3 bucket for pipeline artifacts"
    Value: !Ref ArtifactBucket

  EC2InstanceId:
    Description: "EC2 Instance ID"
    Value: !Ref MyEC2Instance

  CodeDeployRoleArn:
    Description: "ARN of CodeDeploy role"
    Value: !GetAtt CodeDeployRole.Arn

  CodePipelineRoleArn:
    Description: "ARN of CodePipeline role"
    Value: !GetAtt CodePipelineRole.Arn

  CodeBuildRoleArn:
    Description: "ARN of CodeBuild role"
    Value: !GetAtt CodeBuildRole.Arn
